---
import Layout from "../layouts/Layout.astro";
---

<Layout title="barbajoe svelte lib">
  <h1>Svelte Library</h1>
  <p>
    <b>TLDR</b>: install into your project, wrap your app in the layout
    component and then start using any give component as you wish.
  </p>

  <p>Install the Svelte+CSS Libraries:</p>
  <div class="container">
    <code>npm i -D @barbajoe/svelte-lib && npm i -D @barbajoe/css-lib</code>
    <code
      >pnpm add -D @barbajoe/svelte-lib && pnpm add -D @barbajoe/css-lib</code
    >
    <code
      >yarn add -D @barbajoe/svelte-lib && yarn add -D @barbajoe/css-lib</code
    >
  </div>

  <p>
    Then wrap your app in the <code>Layout</code> component and you're good to go!
  </p>

  <p>
    Note that you can overwrite CSS Variables if you wish. See the <a
      href="/css-variables">Variables</a
    > page for more info.
  </p>

  <p>TODO: add CSS Variables page</p>

  <pre>
    <code>
{`
<script lang="ts">
  import { page } from "$app/stores";
  import { Layout } from "@barbajoe/svelte-lib";
  import type { HeaderLink, LogoData } from "@barbajoe/svelte-lib/dist/types";

  $: links = [
    { href: "/page1", text: "Page 1", active: $page.url.pathname === "/page1" },
    { href: "/page2", text: "Page 2", active: $page.url.pathname === "/page2" },
    { href: "/page3", text: "Page 3", active: $page.url.pathname === "/page3" },
  ] as HeaderLink[];

  const logo: LogoData = {
    href: "/",
    src: "/favicon.ico",
    alt: "Logo",
    ariaLabel: "go to landing page",
    text: "barbajoe's svelte library",
  };
</script>

<Layout {links} {logo}>
  <slot />
</Layout>
`}
    </code>
  </pre>

  <h2>Components</h2>

  <h3>Layout</h3>

  <p>
    Sets a Header, Footer, and a main body section that auto expands to the view
    height (<code>vh</code>)
  </p>

  <h4>Usage</h4>

  <p>TODO: add example code</p>
</Layout>

<style>
  .container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 1rem;
  }
  @media (max-width: 1279px) {
    .container {
      grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    }
  }
</style>
